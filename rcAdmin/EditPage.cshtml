@{
    //fileManager
    Response.Cookies[Session.SessionID].Value = "True";
    Response.Cookies[Session.SessionID].Expires = DateTime.Now.AddHours(3);
    
    //List all Layout files
    DirectoryInfo dirInfo = new DirectoryInfo(Server.MapPath("~/rcLayouts"));
    FileInfo[] fileInfo = dirInfo.GetFiles("_*.cshtml", SearchOption.TopDirectoryOnly  );

    var pId = Request["id"];
    var errMSG = "";
    
    var db = Database.Open("razorC");
    var sqlSelect = " Select * from rc_Pages where pId=@0";
    var data = db.QuerySingle(sqlSelect,pId);

    var pName = data.pName;
    var pTitle = data.pTitle;
    var pText = data.pText;
    var mTitle = data.mTitle;
    var mDescription = data.mDescription;
    var mKeywords = data.mKeywords;
    var pMasterPage = data.pMasterPage;
    var pEditDate = data.pEditDate;
    var pBody = data.pBody;

    Page.Title = Html.Raw("razorC.net" + " <a href=\"WidgetsInSection.cshtml?pid=" + pId + "&pName=" + pName + "\" title=\"Widgets\">"
    + "<img src=\"images/widgets.gif\" alt=\"Delete\" class=\"rcGC\" /></a>");
    
    if (IsPost){

        pName = Request["pName"];
        pTitle = Request["pTitle"];
        pText = Request.Unvalidated("pText");
        mTitle = Request["mTitle"];
        mDescription = Request["mDescription"];
        mKeywords = Request["mKeywords"];
        pMasterPage = Request["pMasterPage"];
        pEditDate = DateTime.Now;
        pBody = false;
        if(Request["pBody"] == "on"){
            pBody = true;
        }

        var sqlUpdate = "Update rc_Pages set "
            + "pTitle=@0, pText=@1, mTitle=@2, mDescription=@3, mKeywords=@4, pMasterPage=@5, pEditdate=@6, pBody=@7 "
            + "where pId=@8";

        try
        {
            db.Execute(sqlUpdate, pTitle, pText, mTitle, mDescription, mKeywords, pMasterPage, pEditDate, pBody, pId);
            errMSG = "Data saved !";
        }
        catch (Exception ex)
        {

            errMSG = ex.Message.ToString();
        }
        
    }
    
}

@section head {
<!-- You can use any editor you want. We decided to use TinyMCE visit http://tinymce.moxiecode.com/ for licence and help -->
<!-- TinyMCE -->
<script src="@Href("~/tiny_mce/tiny_mce_src.js")" type="text/javascript"></script>
<script type="text/javascript">
        var language = navigator.userLanguage;
        tinyMCE.init({
            relative_urls: false,
            // General options
            mode: "textareas",
            theme: "advanced",
            height: "400",
            plugins: "safari,pagebreak,style,layer,table,save,advhr,advimage,advlink,emotions,iespell,inlinepopups,insertdatetime,preview,media,searchreplace,print,contextmenu,paste,directionality,fullscreen,noneditable,visualchars,nonbreaking,xhtmlxtras,template",
            extended_valid_elements: "div[*],span[*],iframe[src|width|height|name|align]",

            // Theme options
            theme_advanced_buttons1: "save,newdocument,|,bold,italic,underline,strikethrough,|,justifyleft,justifycenter,justifyright,justifyfull,styleselect,formatselect,fontselect,fontsizeselect",
            theme_advanced_buttons2: "cut,copy,paste,pastetext,pasteword,|,search,replace,|,bullist,numlist,|,outdent,indent,blockquote,|,undo,redo,|,link,unlink,anchor,image,cleanup,help,code,|,insertdate,inserttime,preview,|,forecolor,backcolor",
            theme_advanced_buttons3: "tablecontrols,|,hr,removeformat,visualaid,|,sub,sup,|,charmap,emotions,iespell,media,advhr,|,print,|,ltr,rtl,|,fullscreen",
            theme_advanced_buttons4: "insertlayer,moveforward,movebackward,absolute,|,styleprops,|,cite,abbr,acronym,del,ins,attribs,|,visualchars,nonbreaking,template,pagebreak",
            theme_advanced_toolbar_location: "top",
            theme_advanced_toolbar_align: "left",
            theme_advanced_statusbar_location: "bottom",
            theme_advanced_resizing: true,
            file_browser_callback : "filebrowser",

            // Drop lists for link/image/media/template dialogs
            template_external_list_url: "lists/template_list.js",
            external_link_list_url: "lists/link_list.js",
            external_image_list_url: "lists/image_list.js",
            media_external_list_url: "lists/media_list.js"
        });
        function filebrowser(field_name, url, type, win) {

            fileBrowserURL = "@Href("~/FileManager/Default.aspx?sessionid=" + @Session.SessionID.ToString())";

            tinyMCE.activeEditor.windowManager.open({
                title: "Ajax File Manager",
                url: fileBrowserURL,
                width: 950,
                height: 650,
                inline: 0,
                maximizable: 1,
                close_previous: 0
            }, {
                window: win,
                input: field_name,
                sessionid: '@Session.SessionID.ToString()'
            }
);
        }

    </script>
<!-- /TinyMCE -->
}

<form action="" method="post">
 <fieldset>
        <legend>Edit Page</legend>
        @errMSG
        Edited: @pEditDate 
        <ol>
                <li>
                <label for="pName">Name:</label>
                <input type="text" name="pName" id="pName" value="@pName" readonly="readonly" maxlength="100" /> <img src="images/help.gif" alt="help" title="Name of the page. You CANNOT change this." />
                </li>

               <li>
                <label for="pMasterPage">Layout:</label>
                <select id="pMasterPage" name="pMasterPage">
               @foreach (var f in fileInfo )
               {
                <option value="@f.Name" @if(pMasterPage==f.Name){<text>selected="selected"</text>}>@rcFunctions.CleanRCNames(f.Name)</option>
                }
                </select>  <img src="images/help.gif" alt="help" title="Layout/theme that razorC will use to render the page. All layouts are in rcLayouts folder - you can change/modify them to fit your needs" />
            </li>

                <li>
                <label for="pTitle">Title:</label>
                <input type="text" name="pTitle" id="pTitle" value="@pTitle"  maxlength="250" /> <img src="images/help.gif" alt="help" title="Title of the page. Depending on template for body section (located in rcTemplates\Body\ folder) it will or will not be visible to end user" />
                </li>
                <li>
                <label for="pBody">Render Body:</label>
                <input id="pBody" name="pBody" type="checkbox" @if (pBody){<text>checked="checked"</text>} /> <img src="images/help.gif" alt="help" title="Should be selected for most of the pages, unless you need page that ONLY renders widgets in sections..." />
                </li>
            </ol>
            <textarea id="pText" name="pText" cols="80" rows="15">@pText</textarea>
     <input type="submit" name="btnUpdate" value="Update" />
       
</fieldset> 


<fieldset>
        <legend>Edit Meta Tags</legend>
        <ol>
                <li>
                <label for="mTitle">Title:</label>
                <input type="text" name="mTitle" id="mTitle" value="@mTitle" maxlength="100" /> <img src="images/help.gif" alt="help" title="Meta tag: Title" />
                </li>
                <li>
                <label for="mDescription">Description:</label>
                <input type="text" name="mDescription" id="mDescription" value="@mDescription" maxlength="200" /> <img src="images/help.gif" alt="help" title="Meta tag: Description" />
                </li>
                <li>
                <label for="mKeywords">Keywords:</label>
                <input type="text" name="mKeywords" id="mKeywords" value="@mKeywords" maxlength="200" /> <img src="images/help.gif" alt="help" title="Meta tag: keywords" />
                </li>
                </ol>
                </fieldset>
</form>